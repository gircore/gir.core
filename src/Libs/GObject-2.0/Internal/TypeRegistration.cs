using System.Runtime.InteropServices;

namespace GObject.Internal;

internal partial class TypeRegistration
{
    static partial void RegisterAdditionalTypes()
    {
        //Register GLib boxed types, as type registration requires GObject types which are autogenerated and
        //thus can't be moved over to GLib.

        Register<GLib.Array>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.BookmarkFile>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.ByteArray>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Bytes>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Checksum>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Date>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.DateTime>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Dir>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Error>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.HashTable>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Hmac>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.IOChannel>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.KeyFile>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.MainContext>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.MainLoop>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.MappedFile>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.MarkupParseContext>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.MatchInfo>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.OptionGroup>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.PatternSpec>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.PollFD>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.PtrArray>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Rand>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Regex>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Source>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.String>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.StrvBuilder>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Thread>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.TimeZone>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Tree>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.Uri>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        //Variant is a special fundamental type, so there is no get-type function for it.
        //Register<GLib.Variant>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.VariantBuilder>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.VariantDict>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
        Register<GLib.VariantType>(OSPlatform.Linux, OSPlatform.OSX, OSPlatform.Windows);
    }
}
